{"version":3,"sources":["Components/Navigation.tsx","Components/AboutUs.tsx","Components/NotMatch.tsx","Components/Footer.tsx","Components/Item.tsx","Components/Search.tsx","Components/List.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Navigation","className","to","exact","AboutUs","id","NotMatch","Footer","Item","number","abbreviation","name","division","src","alt","Search","props","type","autoComplete","onChange","function","placeholder","List","data","useState","page","setPage","search","setSearch","handlePaginationClick","e","pageNumber","target","innerHTML","parseInt","listData","pages","list","filter","item","index","map","key","full_name","toLowerCase","includes","length","Math","floor","pageList","i","push","onClick","val","value","App","setData","loadData","a","fetch","response","json","result","useEffect","basename","process","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea59cda7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../styles/Navigation.sass\";\r\n\r\n//component with main navlinks\r\nconst Navigation: React.FC = () => (\r\n  <>\r\n    <nav>\r\n      <ul className=\"naviList\">\r\n        <li>\r\n          <NavLink to=\"/\" exact>\r\n          My List\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/aboutus\">\r\n          About us\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </>\r\n);\r\n\r\nexport default Navigation;\r\n","import * as React from 'react';\r\nimport \"../styles/AboutUs.sass\";\r\n\r\nconst AboutUs: React.FC = () => {\r\n  return (\r\n    <div id=\"aboutUs\">\r\n      <h1>ABOUT US</h1>\r\n      <div id=\"paragraphs\">\r\n        <p>\r\n          <strong>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae\r\n            earum beatae delectus at quos maiores impedit asperiores reiciendis.\r\n            Architecto est ad assumenda? Eos quasi molestias quisquam, ipsam quo\r\n            perferendis sit voluptatem natus fuga quod enim commodi dolorum\r\n            maiores veniam laudantium et! Aut dolor repudiandae iure, fugiat\r\n            quas, eos quis minus hic consequuntur, exercitationem facilis?\r\n            Dolores, doloribus delectus laborum molestiae, a nobis ducimus\r\n            nostrum, quidem ea ut est facilis non excepturi eligendi iste nisi\r\n            voluptatem impedit aperiam tempora accusamus recusandae? Magni nemo\r\n            aliquam maiores dicta, cupiditate exercitationem, at minima sed\r\n            ratione veritatis explicabo dolores dolorum eos iure voluptatum\r\n            tempore debitis ipsa!\r\n          </strong>\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic quam a\r\n          voluptates vel! Reiciendis sit temporibus veniam nobis voluptas\r\n          voluptate fugit laudantium, iure officiis sequi. Veritatis impedit\r\n          nemo quam animi eveniet eligendi ratione quos alias commodi qui, est\r\n          error quod illo. Harum libero, magni aperiam, delectus ratione saepe a\r\n          nobis laborum, fugit at mollitia esse vel eveniet quaerat quae soluta\r\n          rerum perferendis tempora deserunt? Architecto perferendis recusandae\r\n          aliquam eaque neque cum unde quasi pariatur? Reiciendis, placeat dicta\r\n          quia repellendus omnis id repellat in ullam veritatis incidunt. Ipsum\r\n          qui vero, minus doloribus delectus repudiandae molestias a sint alias\r\n          itaque neque officiis unde porro assumenda expedita quia? Fugit,\r\n          officia dicta assumenda in deleniti, ut, obcaecati accusantium\r\n          delectus voluptas eius repudiandae culpa suscipit quas minus impedit\r\n          qui distinctio facilis quam. Nesciunt quasi temporibus necessitatibus\r\n          dolorum optio accusantium tempora laudantium rerum aliquid? Eaque\r\n          consequatur dignissimos et pariatur fugiat possimus facilis officia\r\n          amet, exercitationem delectus quisquam! Cum autem veniam sed ullam\r\n          porro aliquam commodi quo earum dignissimos distinctio cupiditate\r\n          voluptatibus reiciendis error minima aspernatur architecto deserunt,\r\n          laudantium ab dicta? Incidunt commodi deserunt necessitatibus eveniet\r\n          similique porro ab fugit. Repudiandae sapiente ea aliquam suscipit\r\n          veniam cupiditate veritatis molestiae blanditiis, enim maiores vero\r\n          deleniti tempore aspernatur voluptates?\r\n        </p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic quam a\r\n          voluptates vel! Reiciendis sit temporibus veniam nobis voluptas\r\n          voluptate fugit laudantium, iure officiis sequi. Veritatis impedit\r\n          nemo quam animi eveniet eligendi ratione quos alias commodi qui, est\r\n          error quod illo. Harum libero, magni aperiam, delectus ratione saepe a\r\n          nobis laborum, fugit at mollitia esse vel eveniet quaerat quae soluta\r\n          rerum perferendis tempora deserunt? Architecto perferendis recusandae\r\n          aliquam eaque neque cum unde quasi pariatur? Reiciendis, placeat dicta\r\n          quia repellendus omnis id repellat in ullam veritatis incidunt. Ipsum\r\n          qui vero, minus doloribus delectus repudiandae molestias a sint alias\r\n          itaque neque officiis unde porro assumenda expedita quia? Fugit,\r\n          officia dicta assumenda in deleniti, ut, obcaecati accusantium\r\n          delectus voluptas eius repudiandae culpa suscipit quas minus impedit\r\n          qui distinctio facilis quam. Nesciunt quasi temporibus necessitatibus\r\n          dolorum optio accusantium tempora laudantium rerum aliquid? Eaque\r\n          consequatur dignissimos et pariatur fugiat possimus facilis officia\r\n          amet, exercitationem delectus quisquam! Cum autem veniam sed ullam\r\n          porro aliquam commodi quo earum dignissimos distinctio cupiditate\r\n          voluptatibus reiciendis error minima aspernatur architecto deserunt,\r\n          laudantium ab dicta? Incidunt commodi deserunt necessitatibus eveniet\r\n          similique porro ab fugit. Repudiandae sapiente ea aliquam suscipit\r\n          veniam cupiditate veritatis molestiae blanditiis, enim maiores vero\r\n          deleniti tempore aspernatur voluptates?\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/NotMatch.sass\";\r\n\r\n//this component will shown when user type wrong path\r\nconst NotMatch = () => {\r\n  return (\r\n    <div id=\"notMatch\">\r\n      <h1>THIS SITE CANNOT BE REACHED</h1>\r\n      <h2>click on the button to go to the main page</h2>\r\n      <NavLink to=\"/\">\r\n        <button>HOME</button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotMatch;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/Footer.sass\";\r\n\r\nconst Footer = () => {\r\n  return <span id=\"copy\">© Piotr Kalman</span>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"../styles/Item.sass\";\r\n\r\ntype Props = {\r\n  number: number;\r\n  abbreviation: string;\r\n  name: string;\r\n  division: string;\r\n};\r\n\r\n//one record from the list component\r\nconst Item: React.FC<Props> = ({ number, abbreviation, name, division }) => (\r\n  <div className=\"item\">\r\n    <div className=\"itemInfoContainer\">\r\n      <div className=\"img\">\r\n        <img src={`https://picsum.photos/200/300?random=${number}\"`} alt=\"\" />\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <h2> {abbreviation}</h2>\r\n        </li>\r\n        <li>\r\n          <h3>\r\n            {\" \"}\r\n            <strong>{name}</strong>\r\n          </h3>\r\n          <h3> {division}</h3>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\n\r\nimport '../styles/Search.sass'\r\n\r\n//component with title and search\r\nconst Search = (props: any) => {\r\n  return (\r\n    <div id=\"header\">\r\n      <div id=\"headerTextContainer\">\r\n        <h1>MY LIST</h1>\r\n        <form className=\"search info\">\r\n          <input\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"search\"\r\n            onChange={props.function}\r\n            placeholder=\"search...\"\r\n          ></input>\r\n          {/* magnifier picture i consists of two divs*/}\r\n          <div>\r\n            <div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Item from \"./Item\";\nimport Search from \"./Search\";\n\nimport \"../styles/List.sass\";\n\ntype Props = {\n  data: any[];\n};\n\nconst List: React.FC<Props> = ({ data }) => {\n  //page tells us about page we are on, search keeps value of the current search\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n\n  //function after site number click, change page of site\n  const handlePaginationClick = (e: any) => {\n    let pageNumber = e.target.innerHTML;\n    setPage(parseInt(pageNumber));\n  };\n\n  //function start when search value is entered\n  const handleSearchChange = (e: any) => {\n    let val = e.target.value;\n    setSearch(val);\n  };\n\n  //destructuring from state variables and props\n  let listData = [...data];\n  let pages = 0;\n  let list: any[] = [];\n\n  //making of list items\n\n  if (search === \"\") {\n    //without search value version\n    list = listData\n      .filter((item, index) => index >= page * 5 - 5 && index < page * 5)\n      .map((item, index) => (\n        <Item\n          key={index}\n          number={\n            page === 1\n              ? index + 1\n              : page === 2\n              ? index + 1 * 6\n              : (index + 1) * 7\n          }\n          name={item.full_name}\n          division={item.division}\n          abbreviation={item.abbreviation}\n        />\n      ));\n  } else {\n    list = listData\n      //with search value version\n      .filter(\n        item =>\n          item.full_name.toLowerCase().includes(search.toLowerCase()) ||\n          item.division.toLowerCase().includes(search.toLowerCase()) ||\n          item.abbreviation.toLowerCase().includes(search.toLowerCase())\n      )\n      .map((item, index) => (\n        <Item\n          key={index}\n          number={index}\n          name={item.full_name}\n          division={item.division}\n          abbreviation={item.abbreviation}\n        />\n      ));\n  }\n\n  //making of pagination list items\n  if (listData.length % 5 === 0) {\n    pages = listData.length / 5;\n  } else {\n    pages = Math.floor(listData.length / 5 + 1);\n  }\n  let pageList: any[] = [];\n  for (let i = 1; i <= pages; i++) {\n    pageList.push(i);\n  }\n  pageList = pageList.map((item, index) => (\n    <li\n      key={index}\n      className={item === page ? \"active\" : \"\"}\n      onClick={handlePaginationClick}\n    >\n      <NavLink to={`/${item}`}>{item}</NavLink>\n    </li>\n  ));\n\n  return (\n    <div id=\"list\">\n      <Search function={handleSearchChange} />\n      {list}\n      {!search && (\n        <div id=\"pages\">\n          <span>-</span>\n          <ul>{pageList}</ul>\n          <span>-</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Navigation from \"./Navigation\";\nimport AboutUs from \"./AboutUs\";\nimport NotMatch from \"./NotMatch\";\nimport Footer from \"./Footer\";\nimport List from \"./List\";\n\nimport \"../styles/App.sass\";\n\nexport interface Team {\n  name: string;\n  abbreviation: string;\n  division: string;\n}\n\nexport interface IData {\n  data: any[];\n}\n\nconst App = () => {\n  //data variable with all Api filtered records\n  const [data, setData] = useState([]);\n\n  //fetching data from public Api, fetching name, division and abbreviation from api\n  const loadData = async () => {\n    const response = await fetch(\"https://www.balldontlie.io/api/v1/teams\");\n    const result = await response.json();\n    setData(result.data.filter((item, index: number) => index < 15));\n  };\n\n  //call loading data function when component is mount\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Navigation />\n        <section>\n          <Switch>\n            {/* Define all routes */}\n            <Route path=\"/aboutus\" exact>\n              <AboutUs />\n            </Route>\n            <Route path=\"/\" exact>\n              <List data={data} />\n            </Route>\n            <Route path=\"/1\" exact>\n              <List data={data} />\n            </Route>\n            <Route path=\"/2\" exact>\n              <List data={data} />\n            </Route>\n            <Route path=\"/3\" exact>\n              <List data={data} />\n            </Route>\n            <Route path=\"/*\" exact>\n              <NotMatch />\n            </Route>\n          </Switch>\n        </section>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}